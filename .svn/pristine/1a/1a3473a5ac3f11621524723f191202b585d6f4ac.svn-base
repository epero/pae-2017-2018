var dtContacts;
var simpleSelect;
var selectedStud;

FrontEnd.onInitPage('pageDashboardStudent', function() {
	//console.log('onInitPage - pageDashBoardStudent');
	
	dtContacts = $('#dtContacts').DataTable({
		bAutoWidth : false,
		info : false,
		language : {
			"search" : "Rechercher : ",
			"emptyTable": "Pas de données disponibles dans la table",
			"lengthMenu": "Montrer _MENU_ entrées",
			"paginate": {
				"first":      "Premier",
				"last":       "Dernier",
				"next":       "Suivant",
				"previous":   "Précédent"
			}
		},
		/*select : {
			style : 'single'
		},*/
		data : "",
		columns : [ 
			{"data" : "entrepriseDto.denomination"},
			{"data" : null,
			 "render" : simpleSelectEtat
			}, 
			{"data" : getPersonneContact},
			{"data" : getEmail},
			{"data" : getTel}
		],
		rowId : 'idContact'
	});
	
    $('#initContact').click(function(){
        $('#pageEntreprises').removeClass();
        $('#pageEntreprises').toggleClass("col-lg-12 col-md-12 col-sm-12 col-xs-12");
        $('#confirmInitiateContact').hide();
        $('#btnsContactEntreprises').show();
		FrontEnd.displayPage('pageEntreprises');
    });
    
    $('.select2-single').on('change', function (e) {
        selectedStud = $(this).find("option:checked").val();
		remplirContacts();
		drawChartStudent();
    });

	FrontEnd.onDisplayPage('pageDashboardStudent', function() {
		
		console.log('onDisplayPage - pageDashBoardStudent');
		$('body').removeClass().toggleClass('theme-teal');
		showNavBar();

		if(myApp.getWhoAmI().estAdmin){		
			
			myApp.myajax({
				data : {
					'action' : 'visualiserUsers',
				},
				success : function(reponse) {
					var data = $.map(reponse, function (obj) {
						  obj.id = obj.id || obj.idUtilisateur; // replace pk with your identifier
						  obj.text = obj.text || obj.nom; // replace name with the property used for the text
						  return obj;
					});
					
					$('.select2-single').select2({
						width: '35%',
						data: data,
						theme: "bootstrap",
						val : data[0]
						//placeholder: "Selectionnez un étudiant"
					});
					$('#divSelectEtud').show();
					selectedStud = data[0].id;
					console.log(selectedStud);
					remplirContacts();
				    google.charts.load('current', {'packages':['corechart']});
					google.charts.setOnLoadCallback(drawChartStudent);
				}
			});

		}	
		else{
			console.log(selectedStud);
			remplirContacts();
		    google.charts.load('current', {'packages':['corechart']});
			google.charts.setOnLoadCallback(drawChartStudent);	
		}
	
	});
	
	FrontEnd.onLeavePage('pageDashboardStudent', function() {
		$('#divSelectEtud').hide();
		selectedStud = undefined;
		$('#nbContacts').text("Contacts : ");
		$('#notification').html('');
		$('#notifContact').html('');
	});

	/*FrontEnd.onDisplayPage('pageDashboardTeacher', function() {
		//console.log('onDisplayPage - pageDashBoardTeacher');
		$('#whoami').text(myApp.getWhoAmI().prenom + " " + myApp.getWhoAmI().nom);
		remplirContacts();
		//insertSelectEtat();
	});*/
	
});


function drawChartStudent() {
	if(selectedStud!=undefined)
		action = 'fillChartStudentAsProf';
	else
		action = 'fillChartStudent';
	var stats;
	
	config = {
		'data': {
			'action': action,
			'selectedStud' : selectedStud
		},
		'success': function (reponse) {
			stats =reponse;

	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['Contacts initiés', stats.contactsinities],
	          ['Contacts pris', stats.contactspris],
	          ['Contacts refusés', stats.contactsrefuses]
	        ]);

	        var options = {
	          //title: 'My Daily Activities'
	        		chartArea:{width:'100%',height:'70%'},
	        		legend:{position:'bottom'}
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('piechartStudent'));

	        chart.draw(data, options);
		}
	}
	myApp.myajax(config);
	
}


function remplirContacts() {
	if(selectedStud!=undefined)
		action = 'visualiserContactsAsProf';
	else
		action = 'visualiserContacts';
	
	myApp.myajax({
		data : {
			'action' : action,
			'selectedStud' : selectedStud
		},
		success : function(data) {
			dtContacts.clear();
			dtContacts.rows.add(data).draw();
		}
	});
}

function getEtat(data,type,full){
	return "";
}

function getPersonneContact(data,type,full){
	if (data.personneContactDto===null){
		return "-";
	}else{
		return data.personneContactDto.prenom+" "+data.personneContactDto.nom;
	}
}
function getEmail(data,type,full){
	if (data.personneContactDto===null){
		return data.entrepriseDto.email;
	}else{
		return data.personneContactDto.email;
	}
}

function getTel(data,type,full){
	if (data.personneContactDto===null){
		return data.entrepriseDto.tel;
	}else{
		return data.personneContactDto.tel;
	}
}

function simpleSelectEtat(data,type,row,meta){
	/*var nbCellules=$('#dtContacts tbody tr td').length;
	var nbLignes=$('#dtContacts tbody tr').length;
	var nbColonnes=nbCellules/nbLignes;
	for(var i=1;i<nbCellules;i+=nbColonnes){
		$($('#dtContacts tbody tr td')[i]).html("hello");
		//$($('#dtContacts tbody tr td')[i]).html('<select><option value="initie">Initie</option><option value="pris">Pris</option></select>');
	}*/
	//var stringSimpleSelect='<select><option value="initie">Initie</option><option value="pris">Pris</option></select>';
	//'<option value="stage_en_ordre" '+putSelected("stage_en_ordre",data.etat)+'>Stage en ordre</option>'+
	//console.log(data.etat);
	switch (data.etat){
	case "stage_en_ordre":
		simpleSelect='<div>Stage en ordre</div>'
		break;
	case "refuse":
		simpleSelect='<div style="color:red">Refusé</div>';
		break;
	default:
		simpleSelect='<select><option value="initie" '+putSelected("initie",data.etat)+' color="red">Initié</option>'+
							 '<option value="pris" '+putSelected("pris",data.etat)+'>Pris</option>'+
							 '<option value="accepte" '+putSelected("accepte",data.etat)+'>Accepté</option>'+	 
							 '<option value="refuse">Refusé</option>'+
					 '</select>';
		break;
	}
	return simpleSelect;
}

/**
 * renvoie la chaine 'selected' si les deux paramètres sont egaux.
 * @param optionValue la valeur de la balise <option>
 * @param dataValue la valeur de l'état du contact
 * @returns la chaine 'selected' si optionValue est égale à dataValue, une chaine vide sinon
 */
function putSelected(optionValue,dataValue){
	if (optionValue===dataValue){
		return 'selected';
	}
	return '';
	
}

//function getNbContacts(data,type,full){
//	console.log(data.utilisateurDto);
//	return data.utilisateurDto.nbContacts;
//}

	// ancienne version
	/*
	 * FrontEnd.onDisplayPage('pageDashboardStudent', function(){
	 * $('#whoami').text(whoami.prenom +" " + whoami.nom); console.log('hey');
	 * remplirContacts(); });
	 * 
	 * FrontEnd.onDisplayPage('pageDashboardTeacher', function(){
	 * $('#whoami').text(whoami.prenom +" " + whoami.nom); });
	 * 
	 * function remplirContacts(){ var dtContacts=$('#dtContacts').DataTable({
	 * destroy: true, bAutoWidth : false, select: { style: 'single' }, ajax:{
	 * type:'POST', url:'/', dataSrc:"", data:{ 'action':'visualiserContacts', },
	 * statusCode: { 422: util.err422, 401: util.err401, 500: util.err500 } },
	 * columns: [ {"data" : "entreprise"}, {"data" : "etat"}, {"data" :
	 * "personneContact"}, //{"data" : "email"}, //{"data" : "tel"} ], rowId:
	 * 'idContact' }) }
	 */
