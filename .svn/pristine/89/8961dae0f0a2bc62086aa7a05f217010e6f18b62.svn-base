package dal.dao;

import org.mindrot.jbcrypt.BCrypt;
import biz.factory.BizFactory;
import biz.user.UserDto;
import exceptions.FatalException;
import util.AppContext.DependanceInjection;

class MockUserDaoImpl implements UserDao {

  // private boolean getUser;

  @DependanceInjection
  private BizFactory factory;

  /*
   * public MockUserDaoImpl(boolean getUser) { this.getUser = getUser; }
   */

  @Override
  public UserDto getUser(String pseudo) {
    // this.getUser = true;
    if (!pseudo.equals("blehmann"))
      return null;
    // dalBackendService.getPreparedStatement(null);
    String motDePasse = "azerty";
    UserDto user = factory.getUserVide();
    user.setPseudo(pseudo);
    user.setMdp(BCrypt.hashpw(motDePasse, BCrypt.gensalt()));
    return user;

  }

  @Override
  public UserDto insertUser(UserDto user) {
    return user;
  }

  @Override
  public boolean pseudoUserExiste(String pseudo) {
    // TODO Auto-generated method stub
    return pseudo.equals("pierre");
  }

  @Override
  public boolean emailUserExiste(String email) {
    // TODO Auto-generated method stub
    return email.equals("pierre@vinci.be");
  }

  @Override
  public UserDto getUser(int idUtilisateur) {
    if (idUtilisateur == -1)
      throw new FatalException();
    if (idUtilisateur == 99999)
      return null;
    UserDto userDto = factory.getUserVide();
    userDto.setIdUtilisateur(idUtilisateur);
    return userDto;
  }

  @Override
  public UserDto updateUser(UserDto user) {
    // TODO Auto-generated method stub
    return null;
  }

  @Override
  public boolean incrementNumberOfContacts(int idUtilisateur) {
    // TODO Auto-generated method stub
    return false;
  }

  @Override
  public boolean incrementNumberOfContacts(UserDto user) {
    // TODO Auto-generated method stub
    return false;
  }

  @Override
  public boolean updateMdp(int numUtilisateur, String newMotDePasse) {
    // TODO Auto-generated method stub
    return false;
  }

  @Override
  public int getNumVersion(int idutilisateur) {
    // TODO Auto-generated method stub
    return 0;
  }

  /*
   * public boolean verify(boolean getUser) { return this.getUser == getUser; }
   */

}
