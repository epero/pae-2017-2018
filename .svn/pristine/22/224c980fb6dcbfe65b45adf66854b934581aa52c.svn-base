package biz.ucc;

import java.time.LocalDate;
import java.util.List;
import biz.contact.ContactBiz;
import biz.contact.ContactDto;
import biz.user.UserDto;
import dal.dao.ContactDao;
import dal.dao.PersonneContactDao;
import dal.dao.UserDao;
import dal.services.DalServices;
import exceptions.BizException;
import util.AppContext.DependanceInjection;
import util.Util;

public class ContactUccImpl implements ContactUcc {
  @DependanceInjection
  private ContactDao contactDao;
  @DependanceInjection
  private PersonneContactDao personneContactDao;
  @DependanceInjection
  private UserDao userDao;
  @DependanceInjection
  private DalServices dalServices;

  @Override
  public List<ContactDto> listerContactUtilisateur(UserDto utilisateur) {
    Util.checkObject(utilisateur);
    // Util.checkInteger(utilisateur.getIdUtilisateur());
    List<ContactDto> contactDtos;

    try {
      dalServices.startTransaction();
      contactDtos = contactDao.listerContactUtilisateur(utilisateur);
    } catch (Exception ex) {
      dalServices.rollback();
      throw ex;
    } finally {
      dalServices.commitTransaction();
    }
    return contactDtos;
  }

  @Override
  public ContactDto creerContactUtilisateur(ContactDto contact) {
    ContactBiz contactAVerif = (ContactBiz) contact;
    Util.checkInteger(contact.getUtilisateur());
    Util.checkInteger(contact.getEntreprise());

    contact.setEtat(Util.Etat.INITIE.toString());
    contact.setAnneeAcademique(Util.localDateToYear(LocalDate.now()));
    ContactDto contactARenv;
    try {
      dalServices.startTransaction();
      int idUtilisateur = contact.getUtilisateur();
      int idEntreprise = contact.getEntreprise();

      if (contactDao.contactEntrepriseExiste(idUtilisateur, idEntreprise)) {
        throw new BizException("Vous avez déjà initié un contact avec cette entreprise");
      }

      if (personneContactDao.personneDeContactAppartientEntreprise(contact.getPersonneContact(),
          idEntreprise)) {
        throw new BizException("Cette personne de contact n'appartient pas à cette entreprise");
      }
      if (contact.getPersonneContact() != 0) {
        contactARenv = contactDao.insertContactUtilisateurAvecPersonneContact(contactAVerif);
      } else {
        contactARenv = contactDao.insertContactUtilisateurSansPersonneContact(contactAVerif);
      }
      userDao.incrementNumberOfContacts(idUtilisateur);

    } catch (Exception ex) {
      dalServices.rollback();
      throw ex;
    } finally {
      dalServices.commitTransaction();
    }
    return contactARenv;
  }

  // @Override
  // public List<ContactDto> listerContactUtilisateur(int idUtilisateur) {
  // return contactDao.listerContactUtilisateur(idUtilisateur);
  // }


}
