package dal.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Logger;
import biz.entreprise.EntrepriseDto;
import biz.factory.BizFactory;
import dal.services.DalBackendServices;
import exceptions.FatalException;
import exceptions.OptimisticLockException;
import util.AppContext.DependanceInjection;
import util.DaoUtil;

public class EntrepriseDaoImpl implements EntrepriseDao {

  @DependanceInjection
  private DalBackendServices dalBackendService;

  @DependanceInjection
  private BizFactory factory;

  @Override
  public List<EntrepriseDto> getAllEntreprises() {
    String query = "SELECT * FROM stagify.entreprises";
    PreparedStatement ps = dalBackendService.getPreparedStatement(query);
    List<EntrepriseDto> entreprises;

    try (ResultSet rs = ps.executeQuery()) {
      EntrepriseDto entreprise = factory.getEntrepriseVide();
      // System.out.println(entreprise);
      entreprises = (List<EntrepriseDto>) (Object) DaoUtil.setResultSet(entreprise.getClass(), rs);

    } catch (SQLException ex) {
      Logger.getLogger("stagifyLogger").fine(ex.getMessage());
      throw new FatalException(
          "Erreur lors de la récupération des entreprises dans la base de données.");
    }
    return entreprises;
  }

  @Override
  public EntrepriseDto getEntreprise(int idEntreprise) {
    String query = "SELECT * FROM stagify.entreprises WHERE id_entreprise=?";
    PreparedStatement ps;
    EntrepriseDto entrepriseDto;
    List<EntrepriseDto> entrepriseDtos;

    try {
      ps = dalBackendService.getPreparedStatement(query);
      DaoUtil.setPreparedStatement(ps, idEntreprise);
      try (ResultSet resultSet = ps.executeQuery()) {
        entrepriseDto = (EntrepriseDto) factory.getEntrepriseVide();
        entrepriseDtos = (List<EntrepriseDto>) (Object) DaoUtil
            .setResultSet(entrepriseDto.getClass(), resultSet);
      }
    } catch (SQLException ex) {
      Logger.getLogger("stagifyLogger").fine(ex.getMessage());
      throw new FatalException(
          "Erreur lors de la récupération de l'entreprise dans la base de données.");
    }
    if (entrepriseDtos == null || entrepriseDtos.size() > 1) {
      throw new FatalException("Erreur de programmation");
    }
    if (entrepriseDtos.isEmpty()) {
      return null;
    }
    return entrepriseDtos.get(0);
  }

  @Override
  public EntrepriseDto blacklistEntreprise(EntrepriseDto entreprise) {

    String query =
        "UPDATE stagify.entreprises " + "SET est_black_liste = true, num_version = num_version+1 "
            + "WHERE id_entreprise = ? AND num_version = ?";
    PreparedStatement ps = dalBackendService.getPreparedStatement(query);
    DaoUtil.setPreparedStatement(ps, entreprise.getIdEntreprise(), entreprise.getNumVersion());
    try {
      int codeRetour = ps.executeUpdate();
      if (codeRetour == 1) {
        entreprise.setNumVersion(entreprise.getNumVersion() + 1);
        return entreprise;
      } else if (codeRetour == 0) {
        throw new OptimisticLockException(
            "L'entreprise a été modifiée depuis le chargement de cette page",
            getEntreprise(entreprise.getIdEntreprise()));
      } else {
        throw new FatalException("Erreur de programmation");
      }
    } catch (SQLException ex) {
      Logger.getLogger("stagifyLogger").fine(ex.getMessage());
      throw new FatalException("Erreur lors de l'accès DB blacklistEntreprise()");
    }
  }

  /*
   * @Override public EntrepriseDto insertEntreprise(EntrepriseDto entreprise) { String query =
   * "INSERT INTO stagify.entreprises" +
   * "(denomination, adresse, numero, boite, code_postal, ville, email, tel, est_black_liste)" +
   * "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?)"; PreparedStatement ps =
   * dalBackendService.getPreparedStatement(query); DaoUtil.setPreparedStatement(ps,
   * entreprise.getDenomination(), entreprise.getAdresse(), entreprise.getNumero(),
   * entreprise.getBoite(), entreprise.getCodePostal(), entreprise.getVille(),
   * entreprise.getEmail(), entreprise.getTel(), entreprise.getEstBlackListe()); try { int
   * codeRetour = ps.executeUpdate(); if (codeRetour == 1) { return entreprise; } else { return
   * null; } } catch (SQLException ex) { ex.printStackTrace();
   * System.out.println("Erreur lors de l'insertion d'une entreprise"); throw new
   * FatalException("Erreur lors de l'accès à la DB"); }
   * 
   * }
   */


  // @Override
  // public EntrepriseDto getEntreprise(int idEntreprise) {
  // String query = "SELECT id_entreprise, denomination, ville, email, tel, est_black_liste FROM
  // stagify.entreprises WHERE id_entreprise=?";
  // PreparedStatement ps = dalBackendService.getPreparedStatement(query);
  // DaoUtil.setPreparedStatement(ps, idEntreprise);
  // try(ResultSet rs = ps.executeQuery();) {
  // if (rs.next()){
  // EntrepriseDto entreprise = factory.getEntrepriseVide();
  // List<Object> listeEntreprise = DaoUtil.setResultSet(entreprise.getClass(), rs);
  // switch(listeEntreprise.size()){
  // case 0:
  // throw new FatalException("Erreur de programmation");
  // case 1:
  // return (EntrepriseDto) listeEntreprise.get(0);
  // default:
  // throw new FatalException("clef primaire entreprise dupliquée,contactez administrateur
  // système");
  // }
  // }else{
  // return null;
  // }
  //
  // } catch (SQLException e) {
  // System.out.println("Erreur lors de la récupération d'une entreprise");
  // throw new FatalException("Erreur lors de l'accès à la DB");
  // }
  // }


}
