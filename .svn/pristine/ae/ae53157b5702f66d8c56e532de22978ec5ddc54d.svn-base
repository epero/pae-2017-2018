package ihm.servlet;

import static util.Util.hashpw;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.eclipse.jetty.servlet.DefaultServlet;
import biz.ucc.UserUCC;
import util.AppContext;
import util.AppContext.dependanceInjection;

import com.auth0.jwt.JWTSigner;
import com.auth0.jwt.JWTVerifier;


public class DispatcherServlet extends DefaultServlet {

  @dependanceInjection
  private static UserUCC userUCC;


  @Override
  protected void doGet(HttpServletRequest req, HttpServletResponse resp)
      throws ServletException, IOException {
    // TODO Auto-generated method stub

    System.out.println(req.getRequestURI());

    if (req.getRequestURI().equals("/")) {
      Files.copy(new File("inc/header.html").toPath(), resp.getOutputStream());
      Files.copy(new File("inc/_login.html").toPath(), resp.getOutputStream());
      Files.copy(new File("inc/prefooter.html").toPath(), resp.getOutputStream());
      Files.copy(new File("inc/footer.html").toPath(), resp.getOutputStream());
      resp.setContentType("text/html; charset=UTF-8");
    } else
      super.doGet(req, resp);


  }

  @Override
  protected void doPost(HttpServletRequest req, HttpServletResponse resp)
      throws ServletException, IOException {
    resp.setContentType("text/html; charset=UTF-8");
    String action = req.getParameter("action");

    switch (action) {
      case "signin":
        signin(req, resp);
        break;
      case "signup":
        signup(req, resp);
        break;
      default:
        break;
    }
  }

  private void signin(HttpServletRequest req, HttpServletResponse resp) throws IOException {

    String login = req.getParameter("user");
    String password = req.getParameter("pswd");
    String remoteAddr = req.getRemoteAddr();
    
    // si l utilisateur peut se connecter
    if (userUCC.seConnecter(login, password)!=null){
    	resp.getOutputStream().write("ok".getBytes());
    	
    	Map<String,Object> claims = new HashMap<>();
    	claims.put("user", login);
    	claims.put("ip", remoteAddr);
    	
    	Properties devProps= AppContext.loadDevProps();
    	String secret= devProps.getProperty("JWTSecret");
    	
    	String token= new JWTSigner(secret).sign(claims);
    	
    	Cookie cookie = new Cookie("token", token);
		cookie.setPath("/");
		cookie.setMaxAge(60*60*24*365);
		resp.addCookie(cookie);
    }else{
    	resp.getOutputStream().write("ko".getBytes());
    }

  }

  private void signup(HttpServletRequest req, HttpServletResponse resp) throws IOException {

    String login = req.getParameter("user");
    String password = req.getParameter("pswd");
    // TO CONTINUE

    // VINCENT
    String pw_hash = hashpw(password);
  }
  
  
}
