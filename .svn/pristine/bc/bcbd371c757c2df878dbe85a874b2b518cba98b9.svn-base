package biz.user;


import java.time.LocalDate;
import util.AppContext.DependanceInjection;
import util.Util;

public class UserImpl implements UserBiz {

  @DependanceInjection
  private Util util;
  private final int MAX_CARACTERES_PAR_DEFAUT = 30;

  // attributs
  private int idUtilisateur;
  private String pseudo;
  private String mdp;
  private String nom;
  private String prenom;
  private LocalDate dateNaissance;
  private String tel; // verifier selon DB
  private String email;
  private LocalDate dateInscription;
  private String anneeAcademique;
  private boolean estAdmin;
  private int nbContacts;

  @Override
  public boolean verifierMotDePasse(String mdp) {
    util.checkString(this.pseudo);
    return util.checkpw(mdp, this.mdp);
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((mdp == null) ? 0 : mdp.hashCode());
    result = prime * result + ((pseudo == null) ? 0 : pseudo.hashCode());
    return result;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    UserImpl other = (UserImpl) obj;
    if (mdp == null) {
      if (other.mdp != null) {
        return false;
      }
    } else if (!mdp.equals(other.mdp)) {
      return false;
    }
    if (pseudo == null) {
      if (other.pseudo != null) {
        return false;
      }
    } else if (!pseudo.equals(other.pseudo)) {
      return false;
    }
    return true;
  }

  public int getIdUtilisateur() {
    return idUtilisateur;
  }

  public String getPseudo() {
    return pseudo;
  }

  public String getMdp() {
    return mdp;
  }

  public String getNom() {
    return nom;
  }

  public String getPrenom() {
    return prenom;
  }

  public LocalDate getDateNaissance() {
    return dateNaissance;
  }

  public String getTel() {
    return tel;
  }

  public String getEmail() {
    return email;
  }

  public LocalDate getDateInscription() {
    return dateInscription;
  }

  public String getAnneeAcademique() {
    return anneeAcademique;
  }

  public boolean estAdmin() {
    return estAdmin;
  }

  public int getNbContacts() {
    return nbContacts;
  }

  public void setIdUtilisateur(int idUtilisateur) {
    util.checkPositive(idUtilisateur);
    this.idUtilisateur = idUtilisateur;
  }

  public void setPseudo(String pseudo) {
    util.checkString(pseudo);
    this.pseudo = pseudo;
  }

  public void setMdp(String mdp) {
    util.checkString(mdp);
    this.mdp = mdp;
  }

  public void setNom(String nom) {
    util.checkString(nom);
    this.nom = nom;
  }

  public void setPrenom(String prenom) {
    util.checkString(prenom);
    this.prenom = prenom;
  }

  public void setDateNaissance(LocalDate dateNaissance) {
    util.checkObject(dateNaissance);
    this.dateNaissance = dateNaissance;
  }

  public void setTel(String tel) {
    util.checkString(tel);
    this.tel = tel;
  }

  public void setEmail(String email) {
    util.checkString(email);
    this.email = email;
  }

  public void setDateInscription(LocalDate dateInscription) {
    util.checkObject(dateInscription);
    this.dateInscription = dateInscription;
  }

  public void setAnneeAcademique(String anneeAcademique) {
    util.checkString(anneeAcademique);
    this.anneeAcademique = anneeAcademique;
  }

  public void setEstAdmin(boolean estAdmin) {
    this.estAdmin = estAdmin;
  }

  public void setNbContacts(int nbContacts) {
    util.checkPositiveOrZero(nbContacts);
    this.nbContacts = nbContacts;
  }

  @Override
  public boolean checkFormatPseudo() {
    return checkFormatString(this.pseudo, MAX_CARACTERES_PAR_DEFAUT);
  }

  @Override
  public boolean checkFormatNom() {
    return checkFormatString(this.nom, MAX_CARACTERES_PAR_DEFAUT);
  }

  @Override
  public boolean checkFormatPrenom() {
    return checkFormatString(this.prenom, MAX_CARACTERES_PAR_DEFAUT);
  }

  @Override
  public boolean checkFormatMdp() {
    // TODO Auto-generated method stub
    return checkFormatString(this.mdp, MAX_CARACTERES_PAR_DEFAUT);
  }

  @Override
  public boolean checkFormatEmail() {
    return checkFormatString(this.email, MAX_CARACTERES_PAR_DEFAUT)
        && this.email.matches(".+@.*vinci\\..+");
  }

  @Override
  public boolean checkFormatTel() {
    return checkFormatString(this.tel, MAX_CARACTERES_PAR_DEFAUT)
        && this.tel.matches("[0-9]+|\\+[0-9]+");
  }

  @Override
  public boolean checkFormatDateNaissance() {
    return checkFormatDate(this.dateNaissance);
  }

  /**
   * verifie si string nest pas null ni vide, ni dépasse maxCaracteres
   * 
   * @param string la chaine a verifier
   * @param maxCaracteres le nombre maximum de caracteres autorises
   * @return true si string nest pas null ni vide et ne dépasse pas maxCaracteres,false sinon
   */
  private boolean checkFormatString(String string, int maxCaracteres) {
    return string != null && string != "" && string.length() <= maxCaracteres;
  }

  /**
   * verifie si date n est pas null
   * 
   * @param date la date type LocalDate
   * @return true si date n est pas null, false sinon
   */
  private boolean checkFormatDate(LocalDate date) {
    return date != null;
  }

}
