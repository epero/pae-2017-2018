let user;

FrontEnd.onDisplayPage('pageDonneesPerso', function(){

    // Affichage par défaut du formulaire
    $('#div-btn-modif-mdp').css('display', 'block');
    $('#inputs-modif-mdp').css('display', 'none');
    $("#form-modif-donnees-perso").validate().resetForm();
    $('.form-line').removeClass('error focused');

    config = {
        'data': {
            'action': 'getInfosPersoUser',
            'user': user
        },
        'success': function(reponse){

            user = reponse.userInfo;
            date = new Date(user.dateNaissance.monthValue + " " + user.dateNaissance.dayOfMonth + " " + user.dateNaissance.year);
            user.dateNaissance = dateFormatee(date);
            myApp.json2Form($('#form-modif-donnees-perso'), user);
        }
    }
    myApp.myajax(config);
});

$('#btn-modif-mdp').on('click', function(){
    $('#div-btn-modif-mdp').css('display', 'none');
    $('#inputs-modif-mdp').css('display', 'block');
});

$('#btn-donnees-perso-cancel').on('click', function(){

    if(myApp.getWhoAmI().estAdmin === false){
        
        FrontEnd.displayPage('pageDashboardStudent');
    }
    else{
        FrontEnd.displayPage('pageDashboardTeacher');
    }
});

$('#btn-donnees-perso-submit').on('click', function(){

    var mdpchange = false;

    //vérification si pseudo non changé
    if($('#form-modif-donnees-perso #pseudo').val() !== user.pseudo){
        $('#notification-form-infos-perso').html('<div class="alert alert-dismissible bg-red text-center"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>Vous ne pouvez pas modifier votre pseudo</div>');
    }
    
    //Verification si modification
    else if($('#form-modif-donnees-perso #mdpActuel').val().length === 0 && $('#form-modif-donnees-perso #nouveauMdp1').val().length === 0
        && $('#form-modif-donnees-perso #nouveauMdp2').val().length === 0 && $('#form-modif-donnees-perso #nom').val() === user.nom 
        && $('#form-modif-donnees-perso #prenom').val() === user.prenom && $('#form-modif-donnees-perso #dateNaissance').val() === user.dateNaissance
        && $('#form-modif-donnees-perso #email').val() === user.email && $('#form-modif-donnees-perso #tel').val() === user.tel){

            $('#notification-form-infos-perso').html('<div class="alert alert-dismissible bg-orange text-center"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>Vous n\'avez fait aucune modification</div>');
    }
    else{

        var isvalid = $('#form-modif-donnees-perso').valid();
    	if(isvalid){

            //Si nouveau mdp entré
            if($('#form-modif-donnees-perso #mdpActuel').val().length !== 0 && $('#form-modif-donnees-perso #nouveauMdp1').val().length !== 0
            && $('#form-modif-donnees-perso #nouveauMdp2').val().length !== 0){
                
                mdpchange = true;
            }
            //On remplace les valeurs dans le formulaire
            user.nom = $('#form-modif-donnees-perso #nom').val();
            user.prenom = $('#form-modif-donnees-perso #prenom').val();
            user.dateNaissance = $('#form-modif-donnees-perso #dateNaissance').val();
            user.email = $('#form-modif-donnees-perso #email').val();
            user.tel = $('#form-modif-donnees-perso #tel').val();

            if(mdpchange){

                config = {
                    'data': {
                        'action': 'setInfosPersoUserWithMdp',
                        'user': JSON.stringify(user),
                        'mdpActuel': $('#form-modif-donnees-perso #mdpActuel').val(),
                        'nouveauMdp1': $('#form-modif-donnees-perso #nouveauMdp1').val(),
                        'nouveauMdp2': $('#form-modif-donnees-perso #nouveauMdp2').val()
                    },
                    'success': function(reponse){
                        if(reponse != null){
                            $('#notification-form-infos-perso').html('<div class="alert alert-dismissible bg-green text-center"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>Vos informations ont été modifées</div>');
                        } else{
                            $('#notification-form-infos-perso').html('<div class="alert alert-dismissible bg-red text-center"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>Vos informations n\'ont pas été modifées</div>');
                        }
                    }
                }
            }
            else {

                config = {
                    'data': {
                        'action': 'setInfosPersoUser',
                        'user': JSON.stringify(user),
                    },
                    'success': function(reponse){
                        if(reponse != null){
                            $('#notification-form-infos-perso').html('<div class="alert alert-dismissible bg-green text-center"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>Vos informations ont été modifées</div>');
                        } else{
                            $('#notification-form-infos-perso').html('<div class="alert alert-dismissible bg-red text-center"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>Vos informations n\'ont pas été modifées</div>');
                        }
                    }
                }
            }
            myApp.myajax(config);
        }
    }
});

FrontEnd.onInitPage('pageDonneesPerso', function(){

    //Jquery validation
    $("#form-modif-donnees-perso").validate({
        rules: {
            pseudo: {
                minlength: 1,
                maxlength: 30
            },
            mdpActuel: {
                maxlength: 60
            },
            nouveauMdp1: {
                maxlength: 60
            },
            nouveauMdp2: {
                maxlength: 60,
                equalTo: "#nouveauMdp1"
            },
            nom: {
                required: true,
                maxlength: 50
            },
            prenom: {
                required: true,
                maxlength: 30
            },
            dateNaissance: {
                required: true,
                dateNaissanceVerif: true
            },
            tel: {
                required: true,
                telVerif: true,
            },
            email: {
                maxlength: 100,
                required: true,
                vinciMail: true
            }
        },
        messages: {
            pseudo: "Veuillez indiquer votre pseudo",
            mdpActuel: "Votre mot de passe est trop long",
            nouveauMdp1: "Votre mot de passe est trop long",
            nouveauMdp2: {
                maxlength: "Votre mot de passe est trop long",
                equalTo: "Les mots de passe ne correspondent pas"
            },
            nom: {
                required: "Veuillez indiquer un nom",
                maxlength: "Votre nom est trop long"
            },
            prenom: {
                required: "Veuillez indiquer un prénom",
                maxlength: "Votre prénom est trop long"
            },
            dateNaissance: {
                required: "Veuillez indiquer une date de naissance",
                dateNaissanceVerif: "Le date de naissance doit respecter le format indiqué"
            },
            tel: {
                required: "Veuillez indiquer votre numéro de téléphone",
                telVerif: "Le numéro doit commencer par +32 et contenir entre 11 et 12 chiffres",
            },
            email: {
                required: "Veuillez indiquer votre email",
                vinciMail: "Seul vinci.be ou student.vinci.be est accepté"
            },
        },
        highlight: function (input) {
            $(input).parents('.form-line').addClass('error focused');
        },
        unhighlight: function (input) {
            $(input).parents('.form-line').removeClass('error focused');
        },
        errorPlacement: function (error, element) {
            $(element).parents('.form-group').append(error);
        }
    });

    //vérification input email jquery validation
	jQuery.validator.addMethod("vinciMail", function(value, element){
	    return value.match(/^.+@(vinci|student.vinci).be$/);
	}, 'Seul vinci.be ou student.vinci.be est accepté');
	
	//vérification input tel jquery validation
	jQuery.validator.addMethod("telVerif", function(value, element){
	    return value.match(/^\+32[0-9]{8,9}$/);
	}, 'Le numéro doit commencer par +32 et contenir entre 11 et 12 chiffres');
	
	//vérification input dateNaissance jquery validation
	jQuery.validator.addMethod("dateNaissanceVerif", function(value, element){
	    return value.match(/^([0-2][0-9]|3[01])\/(0[0-9]|1[0-2])\/[0-9]{4}$/);
	}, 'Le date de naissance doit respecter le format indiqué');
});

function dateFormatee(d) {
    let month = String(d.getMonth() + 1);
    let day = String(d.getDate());
    const year = String(d.getFullYear());
  
    if (month.length < 2) month = '0' + month;
    if (day.length < 2) day = '0' + day;
  
    return `${month}/${day}/${year}`;
  }