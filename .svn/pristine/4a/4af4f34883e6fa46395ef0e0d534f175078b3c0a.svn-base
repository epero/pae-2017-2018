package biz.ucc;

import java.time.LocalDate;
import biz.user.UserBiz;
import biz.user.UserDto;
import dal.dao.UserDao;
import dal.services.DalServices;
import exceptions.BizException;
import util.AppContext.DependanceInjection;
import util.Util;

class UserUccImpl implements UserUcc {

  @DependanceInjection
  private UserDao userDao;

  @DependanceInjection
  private DalServices dalServices;


  @Override
  public UserDto seConnecter(String pseudo, String mdp) {

    UserBiz userEnDb = (UserBiz) userDao.getUser(pseudo);


    if (userEnDb != null && userEnDb.verifierMotDePasse(mdp)) {
      return userEnDb;
    }
    return null;
  }


  @Override
  public UserDto seConnecter(UserDto user) {

    UserBiz userAverif = (UserBiz) user;
    Util.checkFormatString(userAverif.getPseudo(), userAverif.MAX_CARACTERES_PSEUDO,
        "Le format du champ pseudo est incorrect");
    Util.checkFormatString(userAverif.getMdp(), userAverif.MAX_CARACTERES_MDP,
        "Le format du champ mdp est incorrect");

    UserBiz userEnDb = (UserBiz) userDao.getUser(userAverif.getPseudo());

    if (userEnDb != null && userEnDb.verifierMotDePasse(userAverif.getMdp())) {
      return userEnDb;
    }
    // throw new BizException();
    return null;
  }

  @Override
  public UserDto sinscrire(UserDto user) {
    // PROBLEME: n envoie qu une exception avec 1 message --> quid du cas ou il y a plusieurs champs
    // non-valides?

    UserBiz userAVerif = (UserBiz) user;
    Util.checkFormatString(user.getPseudo(), userAVerif.MAX_CARACTERES_PSEUDO,
        "Le format du Pseudo est incorrect");
    Util.checkFormatString(user.getMdp(), userAVerif.MAX_CARACTERES_MDP,
        "Le format du mdp est incorrect");
    Util.checkFormatString(user.getPrenom(), userAVerif.MAX_CARACTERES_PRENOM,
        "Le format du prenom est incorrect");
    Util.checkFormatString(user.getNom(), userAVerif.MAX_CARACTERES_NOM,
        "Le format du nom est incorrect");
    Util.checkFormatString(user.getEmail(), userAVerif.MAX_CARACTERES_EMAIL, userAVerif.REGEX_EMAIL,
        "Le format de l'email est incorrect");
    Util.checkFormatString(user.getTel(), userAVerif.MAX_CARACTERES_TEL, userAVerif.REGEX_TEL,
        "Le format du numero de tel est incorrect");
    Util.checkFormatDate(user.getDateNaissance(), "Le format de la date est incorrect");
    user.setDateInscription(LocalDate.now());
    user.setAnneeAcademique(Util.LocalDateToYear(user.getDateInscription()));
    user.setMdp(Util.hashpw(user.getMdp()));

    if (userDao.pseudoUserExiste(user.getPseudo())) {
      throw new BizException("ce pseudo existe déjà");
    }
    if (userDao.emailUserExiste(user.getEmail())) {
      throw new BizException("cet email existe déjà");
    }

    return userDao.insertUser(user);
  }
}
